name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Install EF Core CLI
      run: dotnet tool install --global dotnet-ef
      
    - name: Restore dependencies
      run: dotnet restore Core/Stocks.API/Stocks.API.csproj
      
    - name: Build
      run: dotnet build Core/Stocks.API/Stocks.API.csproj --no-restore --configuration Release
      
    - name: Test
      run: |
        dotnet test Test/Test.csproj --configuration Release
      
    - name: Update Database
      if: github.event_name != 'pull_request'
      run: |
        dotnet ef database update --configuration Release --project Core/Stocks.API/Stocks.API.csproj
      env:
        ConnectionStrings__DefaultConnection: ${{ secrets.DB_CONNECTION_STRING }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Azure Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Build and push Docker image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v4
      with:
        context: ./Core/Stocks.API
        push: true
        tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/stocks-api:${{ github.sha }},${{ secrets.REGISTRY_LOGIN_SERVER }}/stocks-api:latest
        
    - name: Login to Azure
      if: github.event_name != 'pull_request'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure Web App for Containers
      if: github.event_name != 'pull_request'
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'stocks-api-webapp' 
        images: '${{ secrets.REGISTRY_LOGIN_SERVER }}/stocks-api:${{ github.sha }}'
        
    - name: Azure logout
      if: github.event_name != 'pull_request'
      run: az logout
